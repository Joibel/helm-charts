1. Access the application URL by running these commands:
{{- if .Values.ingress.enabled }}
  Open {{ include "ztka.consoleFQDNWithScheme" . }} in browser.
{{- else if .Values.deploy.contour.enable }}
  {{- if (eq (index .Values.contour.envoy.service.annotations "service.beta.kubernetes.io/aws-load-balancer-type" | toString ) "nlb") }}
  Get load balancer address via:
  kubectl get service {{ .Release.Name }}-contour-envoy --namespace {{ .Release.Namespace }} -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'

  Add DNS records of following domains such that it resolves to above address:
  - {{ include "ztka.consoleFQDN" . }}
  - {{ include "ztka.coreConnectorFQDN" . }}
  - {{ include "ztka.userFQDN" . }}
  {{- end }}
  Open {{ include "ztka.consoleFQDNWithScheme" . }} in browser.
{{- else if contains "NodePort" .Values.services.dashboard.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services dashboard)
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.services.dashboard.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w dashboard'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} dashboard --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  {{- with (index .Values.services.dashboard.ports 0) }}
  echo http://$SERVICE_IP:{{ .port }}
  {{- end }}
{{- else if contains "ClusterIP" .Values.services.dashboard.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ .Values.images.dashboard.name }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

You can view the recovery link for admin user by running the following command once all the pods are running:

kubectl logs -f --namespace {{ .Release.Namespace }} $(kubectl get pods --namespace {{ .Release.Namespace }} -l app.kubernetes.io/name='paralus' -o jsonpath='{ .items[0].metadata.name }') initialize | grep 'Org Admin signup URL:'
